- Nuevo proyecto
ng new NOMBRE-PROYECTO

- Install librerias de firebas y bootstrap
npm install firebase @angular/fire font-awesome bootstrap @ng-bootstrap/ng-bootstrap --save

- Para usar firebase usamos estos import
import { AngularFireModule } from '@angular/fire';
import { AngularFirestoreModule } from '@angular/fire/firestore';

- Las credenciales del proyecto de firebase estan en el environment.ts
import { environment } from 'src/environments/environment';

- Usar los componentes bootstraps adaptados a angular
import { NgbModule } from '@ng-bootstrap/ng-bootstrap';

- Usar paquete de formulario
import { ReactiveFormsModule } from '@angular/forms';

- Terminar la configuracion del css de bootstrap, en el archivo "angular.json" agregar en la seccion "style"
"node_modules/bootstrap/dist/css/bootstrap.min.css"

- En el formulario reactivo html identificamos el campos con el "formControlName"

- Cuando se crea un componente con modal hay que declararlo en el app.module.ts principal con el "entryComponents"

- crear una interfaz
ng generate interface components/contact-form/models/contact

- crear servicios
ng generate service components/contact-form/services/contact

- ngClass: permite asignar una clase a una etiqueta según una condición determinada
<td [ngClass]="{'done': contact.done, 'not-done': !contact.done}">{{contact.title}}</td>
si la condicion es verdadera se le asigna la clase "done", si es falsa "not-done"

-pipe para transformar el formato de la fecha "| date"
<td>{{contact.lastModifiedDate | date}}</td>

- generar un modulo para ruteo o redireccionamiento
ng generate module routing  
<router-outlet></router-outlet> es la etiqueta que va en el "app.component" donde se cargaran los componentes segun la ruta




